/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_eurkey_swiss_de.h"

#define DEFAULT_L 	0
#define MAC_L	    1
#define KNEIR_L     2
#define NUMSYM_L 	3
#define NAV_L 		4
#define BLE_L 		5
#define COMFY_L		6
#define NUMBERS_L	7
#define COMMA_L	    8

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt {
    quick_tap_ms = <200>;
};

// Sticky Layer Behavior - release sticky behavior after x ms

&sk {
    release-after-ms = <1800>;
};

// MACROS
// ===========================================================================================================
/*
	.----------------------------------------------------------------------.
	|  0  |  1  |  2  |  3  |  4  |          |  5  |  6  |  7  |  8  |  9  |
	|  10 |  11 |  12 |  13 |  14 |          |  15 |  16 |  17 |  18 |  19 |
	|  20 |  21 |  22 |  23 |  24 |          |  25 |  26 |  27 |  28 |  29 |
	'-----------------\  30 |  31 |          |  32 |  33 /-----------------'
	                   '--------------------------------'

*/
    / {
    macros {
        macro_sch: macro_sch {
            label = "Macro_sch";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp S
                &macro_release &kp RSHIFT
                &macro_tap &kp C &kp H
            >;
            tap-ms = <20>;
            };
        
        macro_ch: macro_ch {
            label = "Macro_ch";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp C
                &macro_release &kp RSHIFT
                &macro_tap &kp H
            >;
            tap-ms = <20>;
            };

        macro_zu: macro_zu {
            label = "Macro_zu";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp Z
                &macro_release &kp RSHIFT
                &macro_tap &kp U
            >;
            tap-ms = <20>;
            };

        };
    };

// COMBOS
// ===========================================================================================================
/*
	.----------------------------------------------------------------------.
	|  0  |  1  |  2  |  3  |  4  |          |  5  |  6  |  7  |  8  |  9  |
	|  10 |  11 |  12 |  13 |  14 |          |  15 |  16 |  17 |  18 |  19 |
	|  20 |  21 |  22 |  23 |  24 |          |  25 |  26 |  27 |  28 |  29 |
	'-----------------\  30 |  31 |          |  32 |  33 /-----------------'
	                   '--------------------------------'
			
	ESC 	= 0 | 1			
	TAB 	= 11 | 12		LC(C)	= 17 | 18
							LC(V)	= 27 | 28
	ENTER 	= 12 | 13		SK(SFT) = 16 | 17       
	LPAR 	= 13 | 14		RPAR 	= 15 | 16       REPEAT 	= 18 | 19

	TO_4	= 21 | 22
	TO_0	= 22 | 23       TO_0	= 26 | 27 
	TO_3	= 20 | 21 | 22	TO_3	= 27 | 28 | 29
    TO_5    = 3  | 13       TO_5    = 6  | 16

*/

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <40>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <40>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };

        combo_enter {
            timeout-ms = <40>;
            key-positions = <12 13>;
            bindings = <&kp ENTER>;
        };

        combo_lpar {
            timeout-ms = <40>;
            key-positions = <13 14>;
            bindings = <&kp LPAR>;
        };

        combo_rpar {
            timeout-ms = <40>;
            key-positions = <15 16>;
            bindings = <&kp RPAR>;
        };

        combo_comfy_left {
            timeout-ms = <40>;
            key-positions = <21 22>;
            bindings = <&to COMFY_L>;
            layers = <0 2 3 4 5 6>;
        };

        combo_comfy_right {
            timeout-ms = <40>;
            key-positions = <27 28>;
            bindings = <&to COMFY_L>;
            layers = <0 2 3 4 5 6>;
        };

        combo_default_left {
            timeout-ms = <40>;
            key-positions = <22 23>;
            bindings = <&to DEFAULT_L>;
            layers = <4 5 6 7>;
        };

        combo_sk_shift {
            timeout-ms = <40>;
            key-positions = <16 17>;
            bindings = <&sk LSHIFT>;
        };

        combo_ble_left {
            timeout-ms = <40>;
            key-positions = <20 21 22>;
            bindings = <&to BLE_L>;
        };

        // CHECK

        combo_repeat {
            timeout-ms = <40>;
            key-positions = <18 19>;
            bindings = <&key_repeat>;
        };

        combo_default_left_MAC {
            timeout-ms = <40>;
            key-positions = <22 23>;
            bindings = <&to 1>;
            layers = <1 7 8>;
        };

        combo_comfy_left_MAC {
            timeout-ms = <40>;
            key-positions = <21 22>;
            bindings = <&to 8>;
            layers = <1 7 8>;
        };


        // BASE LAYERS

        combo_kneir_mac_layer {
            timeout-ms = <40>;
            key-positions = <6 9>;
            bindings = <&to 1>;
            layers = <0 2 3 4 5 6 7 8>;
        };

        combo_kneir_win_layer {
            timeout-ms = <40>;
            key-positions = <10 13>;
            bindings = <&to 2>;
            layers = <0 1 2 3 4 5 6 7 8>;
        };

        combo_qwerty_win_layer {
            timeout-ms = <40>;
            key-positions = <0 3>;
            bindings = <&to 0>;
            layers = <1 2 6 7 8>;
        };

        combo_number_layer_left {
            timeout-ms = <40>;
            key-positions = <20 23>;
            bindings = <&to NUMBERS_L>;
        };

        // SYMBOLS

        combo_dot {
            timeout-ms = <40>;
            key-positions = <26 27>;
            bindings = <&kp DOT>;
            layers = <2 6 7 8>;
        };

        combo_letter_percent {
            timeout-ms = <40>;
            key-positions = <27 28 29>;
            bindings = <&kp PERCENT>;
            layers = <2>;
        };


        // ALPHAS

        combo_letter_q {
            timeout-ms = <40>;
            key-positions = <1 2>;
            bindings = <&kp Q>;
            layers = <2>;
        };

        combo_letter_p {
            timeout-ms = <40>;
            key-positions = <2 3>;
            bindings = <&kp P>;
            layers = <2>;
        };

        combo_letter_b {
            timeout-ms = <40>;
            key-positions = <22 23>;
            bindings = <&kp B>;
            layers = <2>;
        };

        combo_letter_j {
            timeout-ms = <40>;
            key-positions = <6 7>;
            bindings = <&kp J>;
            layers = <2>;
        };

        combo_letter_k {
            timeout-ms = <40>;
            key-positions = <27 28>;
            bindings = <&kp K>;
        };

        // MACROS

        combo_sch {
            timeout-ms = <40>;
            key-positions = <2 11>;
            bindings = <&macro_sch>;
            layers = <2>;
        };

        combo_ch {
            timeout-ms = <40>;
            key-positions = <2 13>;
            bindings = <&macro_ch>;
            layers = <2>;
        };

        combo_zu {
            timeout-ms = <40>;
            key-positions = <7 8>;
            bindings = <&macro_zu>;
            layers = <2>;
        };

    };


    // BEHAVIOR    
    // ===========================================================================================================

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <170>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    // KEYMAP
    // ===========================================================================================================
    // -----------------------------------------------------------------------------
    /* 0 = Default
        .----------------------------------------------------------------------.
        |Q DEL|  W  |  E  |  R  |  T  |          |  Y  |  U  |  I  |  O  |  P  |
        |  A  |  S  |  D  |  F  |  G  |          |  H  |  J  |  K  |  L  |BKSPC|
        |  Z  |  X  |  C  |  V  |  B  |          |  N  |  M  |  ,  |  .  |MO_3 |
        '-----------------\ CTRL| SPC |          | SFT | LALT/-----------------'
                           '--------------------------------'
    */

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&mt DEL Q  &kp W  &kp E      &kp R      &kp T           &kp Y        &kp U      &kp I     &kp O    &kp P
    &kp A  &kp S  &kp D      &kp F      &kp G           &kp H        &kp J      &kp K     &kp L    &kp BACKSPACE
    &kp Z  &kp X  &kp C      &kp V      &kp B           &kp N        &kp M      &kp COMMA &kp DOT  &mo 3
                             &kp LCTRL  &kp SPACE       &kp RSHIFT   &kp LALT
            >;
        };
    
    // ===========================================================================================================
    // -----------------------------------------------------------------------------
    /* 1 = Default MAC
        .----------------------------------------------------------------------.
        |Q DEL|  W  |  C  |  V  |  X  |          |  J  |  F  |  U  |  O  |  Z  |
        |  A  |  S  |  T  |  R  |  B  |          |  K  |  N  |  E  |  I  |  H  |
        |  Y  |  G  |  L  |  D  |  P  |          |  .  |BKSPC|  K  |  ,  |MO_3 |
        '-----------------\ CTRL| SPC |          | SFT | RALT/-----------------'
                           '--------------------------------'
        */

        MAC_layer {
            label = "MAC";
            bindings = <
&mt DEL Q  &kp W  &kp C      &kp V      &kp X           &kp J        &kp F      &kp U     &kp O    &kp Z
    &kp A  &kp S  &kp T      &kp R      &kp B           &kp K        &kp N      &kp E     &kp I    &kp H
    &kp Y  &kp G  &kp L      &kp D      &kp P           &kp DOT      &kp M      &kp BACKSPACE  &kp COMMA  &mo 3
                             &kp LGUI   &kp SPACE       &kp RSHIFT   &kp RALT
            >;
        };

    // ===========================================================================================================
    // -----------------------------------------------------------------------------
    /* 2 = KNEIR Layout
        .----------------------------------------------------------------------.
        |Q DEL|  W  |  C  |  V  |  X  |          |  J  |  F  |  U  |  O  |  Z  |
        |  A  |  S  |  T  |  R  |  B  |          |  K  |  N  |  E  |  I  |  H  |
        |  Y  |  G  |  L  |  D  |  P  |          |  .  |BKSPC|  K  |  ,  |MO_3 |
        '-----------------\ CTRL| SPC |          | SFT | RALT/-----------------'
                           '--------------------------------'
        */

        KNEIR_layer {
            label = "KNEIR";
            bindings = <
&mt DEL Q  &kp W  &kp C      &kp V      &kp X           &kp J        &kp F      &kp U     &kp O    &kp Z
    &kp A  &kp S  &kp T      &kp R      &kp B           &kp K        &kp N      &kp E     &kp I    &kp H
    &kp Y  &kp G  &kp L      &kp D      &kp P           &kp DOT      &kp M      &kp BACKSPACE  &kp COMMA  &mo 3
                             &kp LCTRL  &kp SPACE       &kp RSHIFT   &kp RALT
            >;
        };


        // ===========================================================================================================
        // -----------------------------------------------------------------------------
        /* 3 = Numbers and Symbols
        .----------------------------------------------------------------------.
        | 1 F1|2 F2 |3 F3 |4 F4 |5 F5 |          |  6  |  7  |  8  |  9  |  0  |
        | TAB |  _  |  -  |  =  |  +  |          | [ ] |  @  | ' " |  "  | DEL |
        | LGUI|  !  |  ?  | ; : |  :  |          | { } | / « | \ » |  |  |     |
        '-----------------\ LALT| SFT |          |TO_4 |     /-----------------'
                           '--------------------------------'
        */

        numsym_layer {
            label = "Symbols";
            bindings = <
    &mt F1 N1  &mt F2 N2  &mt F3 N3  &mt F4 N4      &mt F5 N5           &kp N6          &kp N7      &kp N8      &kp N9   &kp N0
    &kp TAB    &kp UNDER  &kp MINUS  &kp EQUAL      &kp LS(EQUAL)       &mt RBKT LBKT   &kp AT      &mt DQT SQT &kp DQT  &kp DEL
    &kp LGUI   &kp EXCL   &kp QMARK  &mt COLON SEMI &kp COLON           &mt RBRC LBRC   &mt RA(LBKT) FSLH  &mt RA(RBKT) BSLH &kp PIPE &none
                                     &kp LALT       &sk LEFT_GUI        &to 4    &kp RALT
            >;
        };

        // ===========================================================================================================
        // -----------------------------------------------------------------------------
        /* 4 = Navigation
        .----------------------------------------------------------------------.
        | ESC |  O  |  E  |  R  |  P  |          |PGUP | ← ← |  ↑  | → → | DEL |
        | DEL |  S  |  D  |  F  |  L  |          |PGDN |  ←  |  ↓  |  →  |BKSPC|
        | SFT |  X  |  C  |  V  |TO_0 |          |HOME |  `  |  ~  |     |TO_0 |
        '-----------------\ CTRL| SPC |          |SHFT |CTRL /-----------------'
                           '--------------------------------'
        */

        nav_layer {
            label = "Nav";
            bindings = <
   &kp ESC     &kp O  &kp E      &kp R      &kp P           &kp PG_UP   &kp LC(LEFT) &kp UP     &kp LC(RIGHT) &kp DEL
   &kp DEL     &kp S  &kp D      &kp F      &kp L           &kp PG_DN   &kp LEFT     &kp DOWN   &kp RIGHT  	  &mt LC(BACKSPACE) BACKSPACE
   &kp LSHIFT  &kp X  &kp C      &kp V      &to 0           &kp HOME    &kp GRAVE    &kp TILDE  &none		  &to 0
                          		 &kp LCTRL  &kp SPACE       &kp LSHIFT  &kp LCTRL
            >;
        };

        // ===========================================================================================================
        // -----------------------------------------------------------------------------
        /* 5 = Bluetooth
        .----------------------------------------------------------------------.
        | BT0 | BT1 | BT2 | BTP | BTN |     	 | BTN | BTP | BT2 | BT1 | BT0 |
        |     |     |     |     | BLC |     	 | BLC |     |     |     |     |
        |TO_0 |     |     |     | BLO |          | BLO |     |     |	 |TO_0 |
        '-----------------\     |TO_0 |          |TO_0 |     /-----------------'
                           '--------------------------------'
        */

        ble_layer {
            label = "BLE";
            bindings = <
&bt BT_SEL 0  	&bt BT_SEL 1  &bt BT_SEL 2  &bt BT_PRV  &bt BT_NXT		&bt BT_NXT	&bt BT_PRV  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
&none    	    &none         &none         &none	    &bt BT_CLR    	&bt BT_CLR  &none       &none         &none         &none
&to 0 		    &none         &none         &none       &bootloader    	&bootloader &none       &none         &none         &to 0
                                	        &none       &to 0          	&to 0       &none
            >;
        };

        // ===========================================================================================================
        // -----------------------------------------------------------------------------
        /* 6 = Comfort
        .----------------------------------------------------------------------.
        | TIL |PGUP |  ↑  |PGDN |  ^  |     	 |PGUP | ← ← |  ↑  | → → | DEL |
        | DEL |  ←  |  ↓  |  →  |  <  |     	 |PGDN |  ←  |  ↓  |  →  |BKSPC|
        | SFT | DEL |BKSPC|     |  >  |          |HOME |  `  |  ~  |     |TO_0 |
        '-----------------\ CTRL| SPC |          |SHFT |CTRL /-----------------'
                           '--------------------------------'
        */

        comfy_layer {
            label = "Comfy";
            bindings = <
 &kp TILDE  &kp PG_UP    &kp UP         &kp PG_DN     &kp CARET            &kp PG_UP   &kp LC(LEFT) &kp UP     &kp LC(RIGHT)  &kp DEL
 &kp DEL    &kp LEFT     &kp DOWN       &kp RIGHT     &kp LESS_THAN        &kp PG_DN   &kp LEFT     &kp DOWN   &kp RIGHT  	  &mt LC(BACKSPACE) BACKSPACE
 &kp LSHIFT &kp DEL      &kp BACKSPACE  &none         &kp GREATER_THAN     &kp HOME    &kp GRAVE    &kp TILDE  &none		  &to 0
                                        &kp LCTRL     &kp SPACE            &kp LSHIFT  &kp LCTRL
            >;
        };

        // ===========================================================================================================
        // -----------------------------------------------------------------------------
        /* 7 = Numbers
        .----------------------------------------------------------------------.
        |  /  |  7  |  8  |  9  |  *  |     	 |  #  | ← ← |  ↑  | → → | DEL |
        |  \  |  4  |  5  |  6  |  +  |     	 |  &  |  ←  |  ↓  |  →  |BKSPC|
        |  0  |  1  |  2  |  3  |  -  |          |  |  |  `  |  ,  |  .  |TO_1 |
        '-----------------\ LGUI| SPC |          |SHFT |LCTRL/-----------------'
                           '--------------------------------'
        */

        numbers_layer {
            label = "Numbers";
            bindings = <
 &kp KP_DIVIDE  &kp N7   &kp N8   &kp N9      &kp KP_MULTIPLY      &kp NON_US_HASH   &kp LC(LEFT)  &kp UP    &kp LC(RIGHT) &kp DEL
 &kp BACKSLASH  &kp N4   &kp N5   &kp N6      &kp KP_PLUS          &kp LS(N7)        &kp LEFT      &kp DOWN  &kp RIGHT     &kp BACKSPACE
 &kp N0         &kp N1   &kp N2   &kp N3      &kp KP_MINUS         &kp LS(BACKSLASH) &kp GRAVE     &kp COMMA &kp DOT       &to 1
                                  &kp LGUI    &kp SPACE            &kp LSHIFT        &kp LCTRL
            >;
        };

        // ===========================================================================================================
        // -----------------------------------------------------------------------------
        /* 8 = Comfort MAC
        .----------------------------------------------------------------------.
        | TIL | ← ← |  ↑  | → → |  ^  |     	 |PGUP | ← ← |  ↑  | → → | DEL |
        | DEL |  ←  |  ↓  |  →  |  <  |     	 |PGDN |  ←  |  ↓  |  →  |BKSPC|
        | SFT | DEL |BKSPC|     |  >  |          |HOME |  `  |  ~  |     |TO_1 |
        '-----------------\LALT | SPC |          |SHFT |RCTRL/-----------------'
                           '--------------------------------'
        */

        macnav_layer {
            label = "CMAC";
            bindings = <
 &kp TILDE  &kp LA(LEFT) &kp UP         &kp LA(RIGHT) &kp CARET            &kp PG_UP   &kp LA(LEFT) &kp UP     &kp LA(RIGHT)  &kp DEL
 &kp DEL    &kp LEFT     &kp DOWN       &kp RIGHT     &kp LESS_THAN        &kp PG_DN   &kp LEFT     &kp DOWN   &kp RIGHT  	  &kp BACKSPACE
 &kp LSHIFT &kp DEL      &kp BACKSPACE  &none         &kp GREATER_THAN     &kp HOME    &kp GRAVE    &kp TILDE  &none		  &to 1
                                        &kp LALT      &kp SPACE            &kp LSHIFT  &kp RCTRL
            >;
        };
    };
};

// ===========================================================================================================
